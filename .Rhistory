getwd()
list.files()
list.files(())
list.files()
readline("gbm_pojo_test.jav")
readline("gbm_pojo_test.java")
readLines("gbm_pojo_test.java")
pojo = readLines("gbm_pojo_test.java")
pojo
}
for(x=0; x<old_pojo.length; x++) {
}
old_pojo.length
old_pojo.length()
op = readLines("gbm_pojo_test.java")
str_detect()
library(stringi)
line="@ModelPojo(name="gbm_pojo_test", algorithm="gbm")"
line="@ModelPojo(name=\"gbm_pojo_test\", algorithm=\"gbm\")"
line
op[3]
op[21]
stri_detect(line, "^@ModelPojo")
stri_detect(line, regex("^@ModelPojo"))
str_detect(line, regex("^@ModelPojo"))
library(stringr)
str_detect(line, regex("^@ModelPojo"))
op=readLines("gbm_pojo_test.java")
str_detect(op[56], regex(".*super.*(.*)"))
op[56]
op[27]
str_detect(op[27], regex(".*super.*(.*)"))
str_detect(op[20], regex("^import hex.*"))
str_detect(op[21], regex("^import hex.*"))
str_detect(op[22], regex("^import hex.*"))
str_replace_all(op[78], " extends GenModel", "")
op[78]
str_replace_all(op[24], " extends GenModel", "")
source('~/karandeep/evr/evr.R', echo=TRUE)
op
op[0]
source('~/karandeep/evr/evr.R', echo=TRUE)
source('~/karandeep/evr/evr.R', echo=TRUE)
source('~/karandeep/evr/evr.R', echo=TRUE)
source('~/karandeep/evr/evr.R', echo=TRUE)
source('~/karandeep/evr/evr.R', echo=TRUE)
source('~/karandeep/evr/evr.R', echo=TRUE)
source('~/karandeep/evr/evr.R', echo=TRUE)
source('~/karandeep/evr/evr.R', echo=TRUE)
op[999]
op[1000]
op
op[2000]
while(!is.na[op[x]]) {x=x+1}
while(!is.na(op[x])) {x=x+1}
source('~/karandeep/evr/evr.R', echo=TRUE)
source('~/karandeep/evr/evr.R', echo=TRUE)
source('~/karandeep/evr/evr.R', echo=TRUE)
new_line=str_replace_all(op[24], " extends GenModel", "")
str_replace_all(op[24], " extends GenModel", "")
source('~/karandeep/evr/evr.R', echo=TRUE)
op[24]
str_detect(op[24], " extendsd GenModel")
str_detect(op[24], " extends GenModel")
source('~/karandeep/evr/evr.R', echo=TRUE)
source('~/karandeep/evr/pojoFilter.R', echo=TRUE)
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
str_replace_all(ojs[28], java_arrFill, "preds.fill(0);")
java_arrFill
str_detect(ojs[28], java_arrFill)
ojs[28]
str_detect(ojs[28], "java.util.Arrays.fill(preds,0);")
str_detect(ojs[28], "java.util.Arrays.fill(preds,0)")
ojs[28]
str_detect(ojs[28], "java")
str_detect(ojs[28], "java.util.")
str_detect(ojs[28], "java.util.Arrays.")
str_detect(ojs[28], "java.util.Arrays.fill")
str_detect(ojs[28], "java.util.Arrays.fill(preds")
str_detect(ojs[28], "java.util.Arrays.fill")
str_detect(ojs[28], "java.util.Arrays.fill(")
str_detect(ojs[28], fixed("java.util.Arrays.fill(preds,0);"))
str_detect(ojs[28], fixed("java.util.Arrays.fill(preds,0);"))
str_detect(ojs[28], fixed("java.util.Arrays.fill(preds,0)"))
str_detect(ojs[28], fixed("java.util.Arrays.fill(preds,0)";))
str_detect(ojs[28], fixed("java.util.Arrays.fill(preds,0);"))
stringr::str_detect(ojs[28], fixed("java.util.Arrays.fill(preds,0);"))
stringr::str_detect(ojs[28], "java.util.Arrays.fill(preds,0);")
stringr::str_detect(ojs[28], "java.util.Arrays.fill(preds,0);")
stringr::str_detect(ojs[28], "java.util.Arrays.fill(preds,0);")
stringr::str_detect(ojs[28], "java.util.Arrays.fill(preds,0")
stringr::str_detect(ojs[28], "java.util.Arrays.fill\(preds,0")
stringr::str_detect(ojs[28], "java.util.Arrays.fill\\(preds,0")
stringr::str_detect(ojs[28], "java.util.Arrays.fill\\(preds,0\\)")
stringr::str_detect(ojs[28], "java.util.Arrays.fill\(preds,0\\)")
stringr::str_detect(ojs[28], "java.util.Arrays.fill\\(preds,0\\)")
ojs[28]
stringr::str_detect(ojs[28], "java.util.Arrays.fill\\(preds,0\\);")
java_arrFill
stringr::str_detect(ojs[28], "\\(preds,0\\);")
stringr::str_detect(ojs[28], "(preds,0)")
stringr::str_detect(ojs[28], "\(preds,0\)")
stringr::str_detect(ojs[28], "\\(preds,0\\)")
stringr::str_detect(ojs[28], "\\(preds,0\\)\")
""
""
gsub(ojs[28], java_arrFill, "preds.fill(0);")
ojs[28]
sub(ojs[28], java_arrFill, "preds.fill(0);")
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
# BEGIN WRITING
ojs=readLines("gbm_pojo_test.js")
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
sub(ojs[28], java_arrFill, "preds.fill(0);")
str_replace_all(ojs[28], java_arrFill, "preds.fill(0);")
str_replace_all(ojs[28], java_arrFill, fixed("preds.fill(0);"))
str_replace_all(ojs[28], fixed(java_arrFill), fixed("preds.fill(0);"))
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
source('~/karandeep/evr/pojoFilter.R', echo=TRUE)
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
source('~/karandeep/evr/pojoFilter.R', echo=TRUE)
source('~/karandeep/evr/pojoFilter.R', echo=TRUE)
source('~/karandeep/evr/pojoFilter.R', echo=TRUE)
source('~/karandeep/evr/jsweetFilter.R', echo=TRUE)
